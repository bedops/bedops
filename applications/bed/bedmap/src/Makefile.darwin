MIN_OSX_VERSION      = 10.7

MAIN                 = ../../../..
MAINAPPDIR           = ../..
HEAD                 = $(MAIN)/interfaces/general-headers
LIB1                 = $(MAIN)/interfaces/src/data/measurement
LIB2                 = $(MAIN)/interfaces/src/utility
LIB3                 = $(MAIN)/interfaces/src/data/starch
THISDIR              = ${shell pwd}
PARTY3               = ${THISDIR}/$(MAIN)/third-party
OBJDIR               = objects_$(ARCH)
LIBJANSSON           = libjansson.a
LIBBZIP2             = libbz2.a
LIBZLIB              = libz.a
LOCALJANSSONDIR      = ${PARTY3}/darwin_intel_${ARCH}/jansson
LOCALJANSSONLIBDIR   = ${LOCALJANSSONDIR}/lib
LOCALJANSSONINCDIR   = ${LOCALJANSSONDIR}/include
LOCALJANSSONLIB      = ${LOCALJANSSONLIBDIR}/${LIBJANSSON}
LOCALBZIP2DIR        = ${PARTY3}/darwin_intel_${ARCH}/bzip2
LOCALBZIP2LIBDIR     = ${LOCALBZIP2DIR}
LOCALBZIP2LIB        = ${LOCALBZIP2LIBDIR}/${LIBBZIP2}
LOCALBZIP2INCDIR     = ${LOCALBZIP2DIR}
LOCALZLIBDIR         = ${PARTY3}/darwin_intel_${ARCH}/zlib
LOCALZLIBLIBDIR      = ${LOCALZLIBDIR}
LOCALZLIBLIB         = ${LOCALZLIBLIBDIR}/${LIBZLIB}
LOCALZLIBINCDIR      = ${LOCALZLIBDIR}
INCLUDES             = -iquote$(HEAD) -I${LOCALJANSSONINCDIR} -I${LOCALBZIP2INCDIR} -I${LOCALZLIBINCDIR}
LIBLOCATION          = -L${LOCALJANSSONLIBDIR} -L${LOCALBZIP2LIBDIR} -L${LOCALZLIBLIBDIR}
LIBRARIES            = ${LOCALJANSSONLIB} ${LOCALBZIP2LIB} ${LOCALZLIBLIB}
STDFLAGS             = -Wall -pedantic -std=c++11 -stdlib=libc++
BLDFLAGS             = -O3 ${STDFLAGS}

DEPENDENCIES         = $(addprefix $(OBJDIR)/,   \
                         NaN.o                   \
												 starchBase64Coding.o    \
												 starchConstants.o       \
												 starchFileHelpers.o     \
												 starchHelpers.o         \
												 starchMetadataHelpers.o \
												 starchSha1Digest.o      \
												 unstarchHelpers.o       )

FLAGS                = $(BLDFLAGS) $(DEPENDENCIES) ${LIBLOCATION} ${INCLUDES}

DFLAGS               = -g -O0 -DDEBUG=1 ${STDFLAGS} $(DEPENDENCIES) ${LIBLOCATION} ${INCLUDES}

GPROFFLAGS           = -O -pg ${STDFLAGS} $(DEPENDENCIES) ${LIBLOCATION} ${INCLUDES}

SOURCE1              = Bedmap.cpp
BINDIR               = ../bin
PROG                 = bedmap

MACFLAGS             = -mmacosx-version-min=$(MIN_OSX_VERSION) -arch $(ARCH)

build: $(BINDIR)/$(PROG)_$(ARCH) $(DEPENDENCIES)

build_debug: $(BINDIR)/debug.$(PROG)_$(ARCH)

build_gprof: $(BINDIR)/gprof.$(PROG)_$(ARCH)

dependencies: $(DEPENDENCIES)

# Binaries
$(BINDIR)/$(PROG)_$(ARCH) : $(DEPENDENCIES) $(LIBRARIES)
	mkdir -p $(BINDIR) && $(CXX) -o $@ $(FLAGS) $(MACFLAGS) $(LIBRARIES) $(SOURCE1)

$(BINDIR)/debug.$(PROG)_$(ARCH) : $(DEPENDENCIES) $(LIBRARIES)
	mkdir -p $(BINDIR) && $(CXX) -o $@ $(DFLAGS) $(MACFLAGS) $(LIBRARIES) $(SOURCE1)

$(BINDIR)/gprof.$(PROG)_$(ARCH) : $(DEPENDENCIES) $(LIBRARIES)
	mkdir -p $(BINDIR) && $(CXX) -o $@ $(GPROFFLAGS) $(MACFLAGS) $(LIBRARIES) $(SOURCE1)

# Object files
$(OBJDIR)/%.o : $(LIB1)/%.cpp
	mkdir -p $(OBJDIR) && $(CXX) -c $(BLDFLAGS) $(MACFLAGS) $< -o $@ ${INCLUDES}

$(OBJDIR)/%.o : $(LIB3)/%.c
	$(CXX) -x c++ -c $(BLDFLAGS) $(MACFLAGS) $< -o $@ ${INCLUDES}


clean:
	rm -rf $(OBJDIR)
	rm -rf $(BINDIR)
