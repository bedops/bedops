MIN_OSX_VERSION      = 10.7

MAIN                 = ../../../..
MAINAPPDIR           = ../..
HEAD                 = $(MAIN)/interfaces/general-headers
LIB3                 = $(MAIN)/interfaces/src/data/starch
PROG                 = sort-bed
DIST_DIR             = ../bin
OBJ_DIR              = objects_${ARCH}
OPTIMIZE             = -O3 -std=c++11 -stdlib=libc++
WARNINGS             = -Wall
THISDIR              = ${shell pwd}
PARTY3               = ${THISDIR}/$(MAIN)/third-party
LIBJANSSON           = libjansson.a
LIBBZIP2             = libbz2.a
LIBZLIB              = libz.a
LOCALJANSSONDIR      = ${PARTY3}/darwin_intel_${ARCH}/jansson
LOCALJANSSONLIBDIR   = ${LOCALJANSSONDIR}/lib
LOCALJANSSONINCDIR   = ${LOCALJANSSONDIR}/include
LOCALJANSSONLIB      = ${LOCALJANSSONLIBDIR}/${LIBJANSSON}
LOCALBZIP2DIR        = ${PARTY3}/darwin_intel_${ARCH}/bzip2
LOCALBZIP2LIBDIR     = ${LOCALBZIP2DIR}
LOCALBZIP2LIB        = ${LOCALBZIP2LIBDIR}/${LIBBZIP2}
LOCALBZIP2INCDIR     = ${LOCALBZIP2DIR}
LOCALZLIBDIR         = ${PARTY3}/darwin_intel_${ARCH}/zlib
LOCALZLIBLIBDIR      = ${LOCALZLIBDIR}
LOCALZLIBLIB         = ${LOCALZLIBLIBDIR}/${LIBZLIB}
LOCALZLIBINCDIR      = ${LOCALZLIBDIR}
INCLUDES             = -iquote$(HEAD) -I${LOCALJANSSONINCDIR} -I${LOCALBZIP2INCDIR} -I${LOCALZLIBINCDIR}
LIBLOCATION          = -L${LOCALJANSSONLIBDIR} -L${LOCALBZIP2LIBDIR} -L${LOCALZLIBDIR}
LIBRARIES            = ${LOCALJANSSONLIB} ${LOCALBZIP2LIB} ${LOCALZLIBLIB}
BLDFLAGS             = ${WARNINGS} ${OPTIMIZE}

build: $(DIST_DIR)/$(PROG)_$(ARCH) $(LIBRARIES)

build_debug: $(DIST_DIR)/debug.$(PROG)_$(ARCH)

build_gprof: $(DIST_DIR)/gprof.$(PROG)_$(ARCH)

dependency_names    = starchConstants starchFileHelpers starchHelpers starchMetadataHelpers unstarchHelpers starchSha1Digest starchBase64Coding SortDetails Sort CheckSort
dependencies        = $(addprefix $(OBJ_DIR)/, $(addsuffix .o, $(dependency_names)))
debug_dependencies    = $(addprefix $(OBJ_DIR)/debug., $(addsuffix .o, $(dependency_names)))
gprof_dependencies    = $(addprefix $(OBJ_DIR)/gprof., $(addsuffix .o, $(dependency_names)))

DBGFLAGS              = -g -O0 -std=c++11 -stdlib=libc++ $(WARNINGS)
GPROFFLAGS            = -pg -O -std=c++11 -stdlib=libc++ $(WARNINGS)

MACFLAGS = -mmacosx-version-min=$(MIN_OSX_VERSION) -arch $(ARCH)

# Normal build
$(DIST_DIR)/$(PROG)_$(ARCH) : $(dependencies) $(LIBRARIES)
	mkdir -p $(DIST_DIR) && ${CXX} -o $@ ${BLDFLAGS} ${LIBLOCATION} ${INCLUDES} $(MACFLAGS) -lc++ $^

$(OBJ_DIR)/%.o : $(LIB3)/%.c
	mkdir -p $(OBJ_DIR) && $(CXX) -x c++ $(MACFLAGS) -c ${BLDFLAGS} $^ -o $@ ${INCLUDES}

$(OBJ_DIR)/%.o : %.cpp
	mkdir -p $(OBJ_DIR) && ${CXX} $(MACFLAGS) -c ${BLDFLAGS} $< -o $@ $(INCLUDES)


# Debug version
$(DIST_DIR)/debug.$(PROG)_$(ARCH) : $(debug_dependencies) $(LIBRARIES)
	mkdir -p $(DIST_DIR) && ${CXX} -o $@ ${LIBLOCATION} ${INCLUDES} $(MACFLAGS) -g -lc++ $^

$(OBJ_DIR)/debug.%.o : $(LIB3)/%.c
	mkdir -p $(OBJ_DIR) && $(CXX) -x c++ $(MACFLAGS) -c ${DBGFLAGS} $< -o $@ ${INCLUDES}

$(OBJ_DIR)/debug.%.o : %.cpp
	mkdir -p $(OBJ_DIR) && ${CXX} $(MACFLAGS) -c ${DBGFLAGS} $< -o $@ $(INCLUDES)


# For profiling
$(DIST_DIR)/gprof.$(PROG)_$(ARCH) : $(gprof_dependencies) $(LIBRARIES)
	mkdir -p $(DIST_DIR) && ${CXX} -o $@ ${LIBLOCATION} ${INCLUDES} $(MACFLAGS) -g -lc++ $^

$(OBJ_DIR)/gprof.%.o : $(LIB3)/%.c
	mkdir -p $(OBJ_DIR) && $(CXX) -x c++ $(MACFLAGS) -c ${GPROFFLAGS} $< -o $@ ${INCLUDES}

$(OBJ_DIR)/gprof.%.o : %.cpp
	mkdir -p $(OBJ_DIR) && ${CXX} $(MACFLAGS) -c ${GPROFFLAGS} $< -o $@ $(INCLUDES)

clean:
	rm -rf ${OBJ_DIR}*
	rm -rf ${DIST_DIR}/${PROG}*
	rm -rf ${DIST_DIR}/*.${PROG}*
	rm -rf ${DIST_DIR}
